@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderBefore })
<div class="header-upper" id="header-upper">
    <div class="container">
        <div class="header-selectors-wrapper">
            @await Component.InvokeAsync("TaxTypeSelector")
            @await Component.InvokeAsync("CurrencySelector")
            @await Component.InvokeAsync("LanguageSelector")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderSelectors })
        </div>
        <div class="header-links-wrapper">
            @await Component.InvokeAsync("HeaderLinks")
            @await Component.InvokeAsync("FlyoutShoppingCart")
        </div>
    </div>
</div>
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMiddle })
<div class="header">
    <div class="header-lower">
        <div class="header-logo">
            @await Component.InvokeAsync("Logo")
        </div>
        <div class="search-box store-search-box">
            @await Component.InvokeAsync("SearchBox")
        </div>
    </div>
</div>
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderAfter })
<script>
    // When the user scrolls the page, execute myFunction
    window.onscroll = function () { myFunction() };

    // Get the header

    var header = document.getElementById("header-upper");

    // Get the offset position of the navbar
        
    var sticky = header.offsetTop;

    // Add the sticky class to the header when you reach its scroll position. Remove "sticky" when you leave the scroll position

    function myFunction() {
        if (window.pageYOffset > sticky) {
            header.classList.add("sticky");
        } else {
            header.classList.remove("sticky");
        }
    }
</script>